version: 2.1

orbs:
    node: circleci/node@4.1.0

aliases:
    - &install-node
      name: Install Node with NPM using NVM
      command: |
          echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
          echo ' [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
          nvm install v14
          nvm alias default v14
          source $BASH_ENV
          node --version

    - &install-gradle
      name: Install Gradle
      command: |
          wget https://services.gradle.org/distributions/gradle-4.0.2-bin.zip -P /tmp
          sudo unzip -d /opt/gradle /tmp/gradle-*.zip
          echo 'export GRADLE_HOME=/opt/gradle/gradle-4.0.2' >> $BASH_ENV
          echo 'export PATH=$PATH:/opt/gradle/gradle-4.0.2/bin' >> $BASH_ENV
          source $BASH_ENV

    - &install-deps
      name: Install Global Dependencies
      command: |
          sudo apt-get update
          sudo apt install npm
          sudo apt install build-essential
          sudo npm install --quiet node-gyp -g
          sudo npm install cordova -g
          sudo npm install ionic -g
          sudo npm config set python /usr/bin/python

    - &install-chrome
      name: Install Chrome
      command: |
          sudo apt install -y libappindicator3-1
          curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome.deb
          sudo sed -i 's|HERE/chrome\"|HERE/chrome\" --disable-setuid-sandbox|g' /opt/google/chrome/google-chrome
          rm google-chrome.deb

    - &install-yarn
      name: Install Latest Yarn
      command: |
          # remove default yarn
          sudo rm -rf $(dirname $(which yarn))/yarn*
          # download latest
          rm -rf ~/.yarn
          curl -o- -L https://yarnpkg.com/install.sh | bash
          echo 'export PATH="${PATH}:${HOME}/.yarn/bin:${HOME}/.config/yarn/global/node_modules/.bin"' >> $BASH_ENV
          source $BASH_ENV

    - &install-android
      name: Install Android SDK
      command: |
          sudo apt-get update
          sudo apt-get remove openjdk*
          sudo apt-get clean
          sudo add-apt-repository -y ppa:openjdk-r/ppa
          sudo apt-get update
          sudo apt-get install -y openjdk-8-jdk
          sudo update-java-alternatives --set java-1.8.0-openjdk-amd64
          which java
          java -version
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java 1 --force
          sudo update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
          echo 'export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64' >> $BASH_ENV
          echo 'export PATH=$PATH:$JAVA_HOME/bin' >> $BASH_ENV
          source $BASH_ENV
          sudo apt install android-sdk
          echo 'export ANDROID_SDK_ROOT="/usr/lib/android-sdk"' >> $BASH_ENV
          echo 'export ANDROID_HOME="/usr/lib/android-sdk"' >> $BASH_ENV
          source $BASH_ENV
          wget https://dl.google.com/android/repository/commandlinetools-linux-6609375_latest.zip
          unzip commandlinetools-linux-6609375_latest.zip -d cmdline-tools
          sudo mv cmdline-tools $ANDROID_HOME/
          echo 'export PATH=$ANDROID_HOME/cmdline-tools/tools/bin:$ANDROID_HOME/tools:$ANDROID_HOME/tools/bin:$ANDROID_HOME/platform-tools:$PATH' >> $BASH_ENV
          mkdir ~/.android && echo '### User Sources for Android SDK Manager' > ~/.android/repositories.cfg
          sudo chown -R $(whoami) $ANDROID_HOME
          echo "Installing SDK tools"
          yes | sdkmanager "tools" --sdk_root=${ANDROID_HOME} || true
          echo "Installing SDK platform-tools"
          yes | sdkmanager "platform-tools" --sdk_root=${ANDROID_HOME} || true
          echo "Installing SDK platforms;android-28"
          yes | sdkmanager "platforms;android-28" --sdk_root=${ANDROID_HOME} || true
          echo "Installing SDK platforms;android-29"
          yes | sdkmanager "platforms;android-29" --sdk_root=${ANDROID_HOME} || true
          echo "Installing SDK build-tools;28.0.3"
          yes | sdkmanager "build-tools;28.0.3" --sdk_root=${ANDROID_HOME} || true
          echo "Installing SDK build-tools;29.0.3"
          yes | sdkmanager "build-tools;29.0.3" --sdk_root=${ANDROID_HOME} || true
          echo "Accepting SDK Licenses"
          yes | sdkmanager --licenses --sdk_root=${ANDROID_HOME} || true
          echo "Updating SDK and accepting licenses"
          yes | sudo /usr/lib/android-sdk/cmdline-tools/tools/bin/sdkmanager --update --sdk_root=${ANDROID_HOME} || true
          source $BASH_ENV
          echo $JAVA_HOME
          echo $PATH
          echo $ANDROID_HOME
          echo $ANDROID_SDK_ROOT
          which java
          java -version

defaults: &defaults
    # put here anything which is common between all jobs
    # we define default work dir, however almost every job redefine it
    working_directory: /tmp/workspace
    environment:
        JVM_OPTS: -Xmx4096m
        JAVA_HOME: /usr/lib/jvm/java-8-openjdk-amd64
        ANDROID_HOME: /usr/lib/android-sdk

jobs:
    build-monorepo-root:
        <<: *defaults
        working_directory: /tmp/workspace/monorepo-root
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-monorepo-root-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build All
                  # note: it should be possible also to run: yarn build,
                  # but for now we don't want parallel builds in Circle
                  command: yarn build:all
                  no_output_timeout: 60m
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-monorepo-root-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - persist_to_workspace:
                  root: /tmp/workspace/monorepo-root
                  paths:
                      - '*'
    build-backend-api:
        <<: *defaults
        working_directory: /tmp/workspace/backend/api
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-backend-api-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:server
                  no_output_timeout: 60m
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-backend-api-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - persist_to_workspace:
                  root: /tmp/workspace/backend/api
                  paths:
                      - '*'
    build-admin-website-angular:
        <<: *defaults
        working_directory: /tmp/workspace/admin/website-angular
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-admin-website-angular-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:admin
                  no_output_timeout: 60m
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-admin-website-angular-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - persist_to_workspace:
                  root: /tmp/workspace/admin/website-angular
                  paths:
                      - '*'
    build-carrier-mobile-ionic:
        <<: *defaults
        working_directory: /tmp/workspace/carrier/mobile-ionic
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-android
            - run: *install-gradle
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-carrier-mobile-ionic-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:carrier
                  no_output_timeout: 60m
            - run:
                  name: Run Ionic Build (Production)
                  command: cd packages/carrier-mobile-ionic && yarn ionic:build:prod
                  no_output_timeout: 60m
            - run:
                  name: Add new android platform
                  command: |
                      cd packages/carrier-mobile-ionic
                      yarn ionic cordova platform add android@8.0.0 --noresources
                      ionic config set -g telemetry true
                      # echo y | android update sdk --no-ui --all --filter tools,platform-tools,extra-google-m2repository,extra-google-google_play_services,extra-android-support,extra-android-m2repository,android-25
                      # echo y | android update sdk --no-ui --all --filter build-tools-25.0.0
                  no_output_timeout: 60m
            - run:
                  name: Run Cordova Build for Android (Debug)
                  command: |
                      cd packages/carrier-mobile-ionic
                      yarn cordova:build
                      mkdir -p /tmp/apk
                      cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk/carrier.apk
                  no_output_timeout: 60m
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-carrier-mobile-ionic-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - store_artifacts:
                  path: /tmp/apk
                  destination: apks
            - persist_to_workspace:
                  root: /tmp/workspace/carrier/mobile-ionic
                  paths:
                      - '*'
    build-shop-mobile-ionic:
        <<: *defaults
        working_directory: /tmp/workspace/shop/mobile-ionic
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-android
            - run: *install-gradle
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-shop-mobile-ionic-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:shopmobile
                  no_output_timeout: 60m
            - run:
                  name: Run Ionic Build (Production)
                  command: cd packages/shop-mobile-ionic && yarn ionic:build:prod
                  no_output_timeout: 60m
            - run:
                  name: Add new android platform
                  command: |
                      cd packages/shop-mobile-ionic
                      yarn ionic cordova platform add android@8.0.0 --noresources
                      ionic config set -g telemetry true
                      # echo y | android update sdk --no-ui --all --filter tools,platform-tools,extra-google-m2repository,extra-google-google_play_services,extra-android-support,extra-android-m2repository,android-25
                      # echo y | android update sdk --no-ui --all --filter build-tools-25.0.0
                  no_output_timeout: 60m    
            - run:
                  name: Run Cordova Build for Android (Debug)
                  command: |
                      cd packages/shop-mobile-ionic
                      yarn cordova:build
                      mkdir -p /tmp/apk
                      cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk/shop.apk
                  no_output_timeout: 60m    
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-shop-mobile-ionic-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - store_artifacts:
                  path: /tmp/apk
                  destination: apks
            - persist_to_workspace:
                  root: /tmp/workspace/shop/mobile-ionic
                  paths:
                      - '*'
    build-shop-website-angular:
        <<: *defaults
        working_directory: /tmp/workspace/shop/website-angular
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-shop-website-angular-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:shopweb
                  no_output_timeout: 60m
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-shop-website-angular-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - persist_to_workspace:
                  root: /tmp/workspace/shop/website-angular
                  paths:
                      - '*'
    build-merchant-tablet-ionic:
        <<: *defaults
        working_directory: /tmp/workspace/merchant/tablet-ionic
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - checkout
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-android
            - run: *install-gradle
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-merchant-tablet-ionic-{{ checksum "yarn.lock" }}
            - run:
                  name: Run Bootstrap
                  no_output_timeout: 60m
                  command: yarn bootstrap
                  no_output_timeout: 60m
            - run:
                  name: Run Build Common Packages
                  command: yarn build:common
                  no_output_timeout: 60m
            - run:
                  name: Run Build
                  command: yarn build:merchant
                  no_output_timeout: 60m
            - run:
                  name: Run Ionic Build (Production)
                  command: cd packages/merchant-tablet-ionic && yarn ionic:build:prod
                  no_output_timeout: 60m
            - run:
                  name: Add new android platform
                  command: |
                      cd packages/merchant-tablet-ionic
                      yarn ionic cordova platform add android@8.0.0 --noresources
                      ionic config set -g telemetry true
                      # echo y | android update sdk --no-ui --all --filter tools,platform-tools,extra-google-m2repository,extra-google-google_play_services,extra-android-support,extra-android-m2repository,android-25
                      # echo y | android update sdk --no-ui --all --filter build-tools-25.0.0
                  no_output_timeout: 60m    
            - run:
                  name: Run Cordova Build for Android (Debug)
                  command: |
                      cd packages/merchant-tablet-ionic
                      yarn cordova:build
                      mkdir -p /tmp/apk
                      cp -r platforms/android/app/build/outputs/apk/debug/app-debug.apk /tmp/apk/merchant.apk
                  no_output_timeout: 60m    
            - save_cache:
                  name: Save Yarn Package Cache
                  key: yarn-packages-merchant-tablet-ionic-{{ checksum "yarn.lock" }}
                  paths:
                      - ~/.cache/yarn
            - store_artifacts:
                  path: /tmp/apk
                  destination: apks
            - persist_to_workspace:
                  root: /tmp/workspace/merchant/tablet-ionic
                  paths:
                      - '*'
    test-carrier-mobile-ionic:
        <<: *defaults
        working_directory: /tmp/workspace/carrier/mobile-ionic
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-chrome
            - attach_workspace:
                  at: /tmp/workspace/carrier/mobile-ionic
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-carrier-mobile-ionic-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: cd carrier/mobile-ionic && yarn install
                  no_output_timeout: 60m
            - run:
                  name: test
                  command: cd carrier/mobile-ionic && yarn test
                  no_output_timeout: 60m

    test-shop-mobile-ionic:
        <<: *defaults
        working_directory: /tmp/workspace/shop/mobile-ionic
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-chrome
            - attach_workspace:
                  at: /tmp/workspace/shop/mobile-ionic
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-shop-mobile-ionic-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: cd shop/mobile-ionic && yarn install
                  no_output_timeout: 60m
            - run:
                  name: test
                  command: cd shop/mobile-ionic && yarn test
                  no_output_timeout: 60m

    test-shop-website-angular:
        <<: *defaults
        working_directory: /tmp/workspace/shop/website-angular
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-chrome
            - attach_workspace:
                  at: /tmp/workspace/shop/website-angular
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-shop-website-angular-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: cd shop/website-angular && yarn install
                  no_output_timeout: 60m
            - run:
                  name: test
                  command: cd shop/website-angular && yarn test
                  no_output_timeout: 60m

    test-admin-website-angular:
        <<: *defaults
        working_directory: /tmp/workspace/admin/website-angular
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-chrome
            - attach_workspace:
                  at: /tmp/workspace/admin/website-angular
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-admin-website-angular-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: cd admin/website-angular && yarn install
                  no_output_timeout: 60m
            - run:
                  name: test
                  command: cd admin/website-angular && yarn test
                  no_output_timeout: 60m

    test-backend-api:
        <<: *defaults
        working_directory: /tmp/workspace/backend/api
        machine:
            image: ubuntu-2004:202010-01
        steps:
            - run: *install-node
            - run: *install-deps
            - run: *install-yarn
            - run: *install-chrome
            - attach_workspace:
                  at: /tmp/workspace/backend/api
            - run:
                  name: 'Pull Submodules'
                  command: |
                      git submodule init
                      git submodule update --remote
            - restore_cache:
                  name: Restore Yarn Package Cache
                  keys:
                      - yarn-packages-backend-api-{{ checksum "yarn.lock" }}
            - run:
                  name: Install Dependencies
                  command: cd backend/api && yarn install
                  no_output_timeout: 60m
            - run:
                  name: test
                  command: cd backend/api && yarn test
                  no_output_timeout: 60m

workflows:
    version: 2
    build_and_test:
        jobs:
            - build-monorepo-root
            - build-backend-api
            - build-admin-website-angular
            - build-merchant-tablet-ionic
            - build-shop-mobile-ionic
            - build-shop-website-angular
            - build-carrier-mobile-ionic
            # - test-admin-website-angular:
            # requires:
            # - build-admin-website-angular
            # filters:
            # branches:
            # only: master
            # - test-backend-api:
            # requires:
            # - build-backend-api
            # filters:
            # branches:
            # only: master
            # - test-merchant-tablet-ionic:
            # requires:
            # - build-merchant-tablet-ionic
            # filters:
            # branches:
            # only: master
            # - test-carrier-mobile-ionic:
            # requires:
            # - build-carrier-mobile-ionic
            # filters:
            # branches:
            # only: master
            # - test-shop-mobile-ionic:
            # requires:
            # - build-shop-mobile-ionic
            # filters:
            # branches:
            # only: master
            # - test-shop-website-angular:
            # requires:
            # - build-shop-website-angular
            # filters:
            # branches:
            # only: master
