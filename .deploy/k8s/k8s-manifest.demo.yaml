---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-admin-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'admindemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443'
        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'admindemo.ever.co'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-admin
    ports:
        - name: http
          protocol: TCP
          port: 443
          targetPort: 4200

---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-shop-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'shopdemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443'
        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'shopdemo.ever.co'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-shop-web-angular
    ports:
        - name: http
          protocol: TCP
          port: 443
          targetPort: 4200

---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-mobile-shop-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'mobileshopdemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443'
        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'mobileshopdemo.ever.co'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-shop-mobile-ionic
    ports:
        - name: http
          protocol: TCP
          port: 443
          targetPort: 4201

---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-carrier-mobile-ionic-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'mobilecarrierdemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443'
        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'mobilecarrierdemo.ever.co'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-carrier-mobile-ionic
    ports:
        - name: http
          protocol: TCP
          port: 443
          targetPort: 4203

---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-merchant-tablet-ionic-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'merchantdemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443'
        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'merchantdemo.ever.co'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-merchant-tablet-ionic
    ports:
        - name: http
          protocol: TCP
          port: 443
          targetPort: 4202

---
kind: Service
apiVersion: v1
metadata:
    name: ever-demo-api-lb
    annotations:
        service.beta.kubernetes.io/do-loadbalancer-name: 'apidemo.ever.co'
        service.beta.kubernetes.io/do-loadbalancer-protocol: 'http2'

        # GraphQL Subscriptions use WebSockets on Port 2086
        service.beta.kubernetes.io/do-loadbalancer-http-ports: '2086'

        # Rest API works on 443, GraphQL API works on 8443
        service.beta.kubernetes.io/do-loadbalancer-http2-ports: '443,8443'

        # Replace with your Certificate Id. You can get a list of Ids with 'doctl compute certificate list'
        service.beta.kubernetes.io/do-loadbalancer-certificate-id: 'a93346c1-d63b-4c33-84c5-4589787428ca'
        service.beta.kubernetes.io/do-loadbalancer-size-slug: 'lb-small'
        service.beta.kubernetes.io/do-loadbalancer-hostname: 'apidemo.ever.co'

        service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-type: 'cookies'
        service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-name: 'route'
        service.beta.kubernetes.io/do-loadbalancer-sticky-sessions-cookie-ttl: '34650'
spec:
    type: LoadBalancer
    selector:
        app: ever-demo-api
    ports:
        - name: rest-api-http
          protocol: TCP
          port: 443
          targetPort: 5500
        - name: gql-api-http
          protocol: TCP
          port: 8443
          targetPort: 8443
        - name: gql-subscriptions-ws
          protocol: TCP
          port: 2086
          targetPort: 2086

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-api
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-api
    template:
        metadata:
            labels:
                app: ever-demo-api
        spec:
            containers:
                - name: ever-demo-api
                  image: ghcr.io/ever-co/ever-api:latest
                  env:
                      - name: HOST
                        value: 0.0.0.0
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: API_HOST
                        value: '0.0.0.0'
                      - name: HTTPPORT
                        value: '5500'
                      # We use LB, so no need to expose HTTPS, only HTTPS required
                      # - name: HTTPSPORT
                      #   value: '2087'
                      - name: GQLPORT
                        value: '8443'
                      # WebSockets (WS) used for GraphQL Subscriptions
                      - name: GQLPORT_SUBSCRIPTIONS
                        value: '2086'
                      - name: ADMIN_PASSWORD_RESET
                        value: 'true'
                      - name: FAKE_DATA_GENERATOR
                        value: 'true'
                      - name: SETTING_INVITES_ENABLED
                        value: 'true'
                      - name: SETTINGS_REGISTRATIONS_REQUIRED_ON_START
                        value: 'false'
                      - name: LOG_LEVEL
                        value: 'info'
                      - name: SENTRY_DSN
                        value: '$SENTRY_DSN'
                      - name: DB_URI
                        value: '$DB_URI'
                      - name: DB_HOST
                        value: '$DB_HOST'
                      - name: DB_SSL_MODE
                        value: '$DB_SSL_MODE'
                      - name: DB_CA_CERT
                        value: '$DB_CA_CERT'
                      - name: DB_USER
                        value: '$DB_USER'
                      - name: DB_PASS
                        value: '$DB_PASS'
                      - name: DB_TYPE
                        value: 'mongodb'
                      - name: DB_NAME
                        value: '$DB_NAME'
                      - name: DB_PORT
                        value: '$DB_PORT'
                      - name: AWS_ACCESS_KEY_ID
                        value: '$AWS_ACCESS_KEY_ID'
                      - name: AWS_SECRET_ACCESS_KEY
                        value: '$AWS_SECRET_ACCESS_KEY'
                      - name: AWS_REGION
                        value: '$AWS_REGION'
                      - name: AWS_S3_BUCKET
                        value: '$AWS_S3_BUCKET'
                      - name: EXPRESS_SESSION_SECRET
                        value: '$EXPRESS_SESSION_SECRET'
                      - name: JWT_SECRET
                        value: '$JWT_SECRET'
                      - name: CLOUDINARY_API_KEY
                        value: '$CLOUDINARY_API_KEY'
                      - name: CLOUDINARY_API_SECRET
                        value: '$CLOUDINARY_API_SECRET'
                      - name: CLOUDINARY_CLOUD_NAME
                        value: '$CLOUDINARY_CLOUD_NAME'
                      - name: MAIL_FROM_ADDRESS
                        value: '$MAIL_FROM_ADDRESS'
                      - name: MAIL_HOST
                        value: '$MAIL_HOST'
                      - name: MAIL_PORT
                        value: '$MAIL_PORT'
                      - name: MAIL_USERNAME
                        value: '$MAIL_USERNAME'
                      - name: MAIL_PASSWORD
                        value: '$MAIL_PASSWORD'
                      - name: ALLOW_SUPER_ADMIN_ROLE
                        value: '$ALLOW_SUPER_ADMIN_ROLE'
                      - name: GOOGLE_APP_ID
                        value: '$GOOGLE_APP_ID'
                      - name: GOOGLE_APP_SECRET
                        value: '$GOOGLE_APP_SECRET'
                      - name: GOOGLE_CALLBACK_URL
                        value: '$GOOGLE_CALLBACK_URL'
                      - name: FACEBOOK_APP_ID
                        value: '$FACEBOOK_APP_ID'
                      - name: FACEBOOK_APP_SECRET
                        value: '$FACEBOOK_APP_SECRET'
                      - name: FACEBOOK_GRAPH_VERSION
                        value: '$FACEBOOK_GRAPH_VERSION'
                      - name: FACEBOOK_CALLBACK_URL
                        value: '$FACEBOOK_CALLBACK_URL'
                      - name: UNLEASH_APP_NAME
                        value: '$UNLEASH_APP_NAME'
                      - name: UNLEASH_API_URL
                        value: '$UNLEASH_API_URL'
                      - name: UNLEASH_INSTANCE_ID
                        value: '$UNLEASH_INSTANCE_ID'
                      - name: UNLEASH_REFRESH_INTERVAL
                        value: '$UNLEASH_REFRESH_INTERVAL'
                      - name: UNLEASH_METRICS_INTERVAL
                        value: '$UNLEASH_METRICS_INTERVAL'
                      - name: STRIPE_SECRET_KEY
                        value: '$STRIPE_SECRET_KEY'
                      - name: URBAN_AIRSHIP_KEY
                        value: '$URBAN_AIRSHIP_KEY'
                      - name: URBAN_AIRSHIP_SECRET
                        value: '$URBAN_AIRSHIP_SECRET'
                      - name: KEYMETRICS_MACHINE_NAME
                        value: '$KEYMETRICS_MACHINE_NAME'
                      - name: KEYMETRICS_SECRET_KEY
                        value: '$KEYMETRICS_SECRET_KEY'
                      - name: KEYMETRICS_PUBLIC_KEY
                        value: '$KEYMETRICS_PUBLIC_KEY'
                      - name: ARCGIS_CLIENT_ID
                        value: '$ARCGIS_CLIENT_ID'
                      - name: ARCGIS_CLIENT_SECRET
                        value: '$ARCGIS_CLIENT_SECRET'
                      - name: ENGINE_API_KEY
                        value: '$ENGINE_API_KEY'
                  ports:
                      - containerPort: 5500
                        protocol: TCP
                      # We use LB, so no need to expose HTTPS, only HTTP required
                      # - containerPort: 2087
                      #   protocol: TCP
                      - containerPort: 8443
                        protocol: TCP
                      - containerPort: 2086
                        protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-admin
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-admin
    template:
        metadata:
            labels:
                app: ever-demo-admin
        spec:
            containers:
                - name: ever-demo-admin
                  image: ghcr.io/ever-co/ever-admin-angular:latest
                  env:
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: HTTPS_SERVICES_ENDPOINT
                        value: 'https://apidemo.ever.co'
                      # We connect via HTTPS, so no need HTTP endpoint address
                      # - name: SERVICES_ENDPOINT
                      #   value: ''
                      - name: GQL_ENDPOINT
                        value: 'https://apidemo.ever.co:8443/graphql'
                      - name: GQL_SUBSCRIPTIONS_ENDPOINT
                        value: 'ws://apidemo.ever.co:2086/subscriptions'
                      - name: SENTRY_DSN
                        value: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
                      - name: CHATWOOT_SDK_TOKEN
                        value: 'jFoSXEjGmqhUhqU3zfgkFfMt'
                      - name: GOOGLE_MAPS_API_KEY
                        value: ''
                      - name: GOOGLE_PLACE_AUTOCOMPLETE
                        value: 'false'
                      - name: DEFAULT_LATITUDE
                        value: '42.6459136'
                      - name: DEFAULT_LONGITUDE
                        value: '23.3332736'
                      - name: CURRENCY_SYMBOL
                        value: '$'
                      - name: DEFAULT_LANGUAGE
                        value: 'en-US'

                  ports:
                      - containerPort: 4200
                        protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-carrier-mobile-ionic
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-carrier-mobile-ionic
    template:
        metadata:
            labels:
                app: ever-demo-carrier-mobile-ionic
        spec:
            containers:
                - name: ever-demo-carrier-mobile-ionic
                  image: ghcr.io/ever-co/ever-carrier-ionic:latest
                  env:
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: HTTPS_SERVICES_ENDPOINT
                        value: 'https://apidemo.ever.co'
                      # We connect via HTTPS, so no need HTTP endpoint address
                      # - name: SERVICES_ENDPOINT
                      #   value: ''
                      - name: GQL_ENDPOINT
                        value: 'http://apidemo.ever.co:8443/graphql'
                      - name: GQL_SUBSCRIPTIONS_ENDPOINT
                        value: 'ws://apidemo.ever.co:2086/subscriptions'
                      - name: SENTRY_DSN
                        value: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
                      - name: CHATWOOT_SDK_TOKEN
                        value: 'jFoSXEjGmqhUhqU3zfgkFfMt'
                      - name: GOOGLE_MAPS_API_KEY
                        value: ''
                      - name: GOOGLE_PLACE_AUTOCOMPLETE
                        value: 'false'
                      - name: DEFAULT_LATITUDE
                        value: '42.6459136'
                      - name: DEFAULT_LONGITUDE
                        value: '23.3332736'
                      - name: CURRENCY_SYMBOL
                        value: '$'
                      - name: DEFAULT_LANGUAGE
                        value: 'en-US'

                  ports:
                      - containerPort: 4203
                        protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-shop-mobile-ionic
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-shop-mobile-ionic
    template:
        metadata:
            labels:
                app: ever-demo-shop-mobile-ionic
        spec:
            containers:
                - name: ever-demo-shop-mobile-ionic
                  image: ghcr.io/ever-co/ever-shop-ionic:latest
                  env:
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: HTTPS_SERVICES_ENDPOINT
                        value: 'https://apidemo.ever.co'
                      # We connect via HTTPS, so no need HTTP endpoint address
                      # - name: SERVICES_ENDPOINT
                      #   value: ''
                      - name: GQL_ENDPOINT
                        value: 'http://apidemo.ever.co:8443/graphql'
                      - name: GQL_SUBSCRIPTIONS_ENDPOINT
                        value: 'ws://apidemo.ever.co:2086/subscriptions'
                      - name: SENTRY_DSN
                        value: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
                      - name: CHATWOOT_SDK_TOKEN
                        value: 'jFoSXEjGmqhUhqU3zfgkFfMt'
                      - name: GOOGLE_MAPS_API_KEY
                        value: ''
                      - name: GOOGLE_PLACE_AUTOCOMPLETE
                        value: 'false'
                      - name: DEFAULT_LATITUDE
                        value: '42.6459136'
                      - name: DEFAULT_LONGITUDE
                        value: '23.3332736'
                      - name: CURRENCY_SYMBOL
                        value: '$'
                      - name: DEFAULT_LANGUAGE
                        value: 'en-US'

                  ports:
                      - containerPort: 4201
                        protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-merchant-tablet-ionic
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-merchant-tablet-ionic
    template:
        metadata:
            labels:
                app: ever-demo-merchant-tablet-ionic
        spec:
            containers:
                - name: ever-demo-merchant-tablet-ionic
                  image: ghcr.io/ever-co/ever-merchant-ionic:latest
                  env:
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: HTTPS_SERVICES_ENDPOINT
                        value: 'https://apidemo.ever.co'
                      # We connect via HTTPS, so no need HTTP endpoint address
                      # - name: SERVICES_ENDPOINT
                      #   value: ''
                      - name: GQL_ENDPOINT
                        value: 'http://apidemo.ever.co:8443/graphql'
                      - name: GQL_SUBSCRIPTIONS_ENDPOINT
                        value: 'ws://apidemo.ever.co:2086/subscriptions'
                      - name: SENTRY_DSN
                        value: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
                      - name: CHATWOOT_SDK_TOKEN
                        value: 'jFoSXEjGmqhUhqU3zfgkFfMt'
                      - name: GOOGLE_MAPS_API_KEY
                        value: ''
                      - name: GOOGLE_PLACE_AUTOCOMPLETE
                        value: 'false'
                      - name: DEFAULT_LATITUDE
                        value: '42.6459136'
                      - name: DEFAULT_LONGITUDE
                        value: '23.3332736'
                      - name: CURRENCY_SYMBOL
                        value: '$'
                      - name: DEFAULT_LANGUAGE
                        value: 'en-US'

                  ports:
                      - containerPort: 4202
                        protocol: TCP

---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: ever-demo-shop-web-angular
spec:
    replicas: 1
    selector:
        matchLabels:
            app: ever-demo-shop-web-angular
    template:
        metadata:
            labels:
                app: ever-demo-shop-web-angular
        spec:
            containers:
                - name: ever-shop-web-angular
                  image: ghcr.io/ever-co/ever-shop-angular:latest
                  env:
                      - name: DEMO
                        value: 'true'
                      - name: NODE_ENV
                        value: 'production'
                      - name: HTTPS_SERVICES_ENDPOINT
                        value: 'https://apidemo.ever.co'
                      # We connect via HTTPS, so no need HTTP endpoint address
                      # - name: SERVICES_ENDPOINT
                      #   value: ''
                      - name: GQL_ENDPOINT
                        value: 'http://apidemo.ever.co:8443/graphql'
                      - name: GQL_SUBSCRIPTIONS_ENDPOINT
                        value: 'ws://apidemo.ever.co:2086/subscriptions'
                      - name: SENTRY_DSN
                        value: 'https://7cd381188b6f446ca0e69185227b9031@o51327.ingest.sentry.io/4397292'
                      - name: CHATWOOT_SDK_TOKEN
                        value: 'jFoSXEjGmqhUhqU3zfgkFfMt'
                      - name: GOOGLE_MAPS_API_KEY
                        value: ''
                      - name: GOOGLE_PLACE_AUTOCOMPLETE
                        value: 'false'
                      - name: DEFAULT_LATITUDE
                        value: '42.6459136'
                      - name: DEFAULT_LONGITUDE
                        value: '23.3332736'
                      - name: CURRENCY_SYMBOL
                        value: '$'
                      - name: DEFAULT_LANGUAGE
                        value: 'en-US'

                  ports:
                      - containerPort: 4200
                        protocol: TCP
